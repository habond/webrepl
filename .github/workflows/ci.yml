name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test All Backends
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build and start services
      run: |
        docker-compose up --build -d
        sleep 30  # Wait for services to be ready
        
    - name: Wait for services to be healthy
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:8080/health 2>/dev/null; do sleep 2; done'
        
    - name: Run backend tests
      run: |
        chmod +x backend/test.sh
        backend/test.sh
        
    - name: Show container logs on failure
      if: failure()
      run: |
        echo "=== Docker Compose Logs ==="
        docker-compose logs
        echo "=== Container Status ==="
        docker-compose ps
        
    - name: Cleanup
      if: always()
      run: |
        docker-compose down -v
        
  frontend-test:
    name: Frontend Tests & Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      working-directory: frontend
      run: npm ci
      
    - name: Run TypeScript check
      working-directory: frontend
      run: npx tsc --noEmit
      
    - name: Run ESLint
      working-directory: frontend
      run: npm run lint
      
    - name: Build frontend
      working-directory: frontend
      run: npm run build
      
  python-backend-test:
    name: Python Backend Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      working-directory: backend/python
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt -r requirements-dev.txt
        
    - name: Run type checking
      working-directory: backend/python
      run: make type-check
      
    - name: Run linting
      working-directory: backend/python
      run: make lint
      
  docker-build-test:
    name: Docker Build Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [frontend, backend-python, backend-javascript, backend-ruby, backend-php]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      run: |
        docker-compose build ${{ matrix.service }}
        
    - name: Test image runs
      run: |
        docker-compose up -d ${{ matrix.service }}
        sleep 10
        docker-compose ps ${{ matrix.service }}
        docker-compose down